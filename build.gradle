// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext{
        ktor_version = "1.6.5"
        navigationVersion = '2.5.3'
        androidXTestCoreVersion = '1.5.0'
        androidXTestExtKotlinRunnerVersion = '1.1.1'
        roomVersion = '2.5.0'
        archLifecycleVersion = "2.5.0"
        coroutinesVersion = '1.6.4'
        robolectricVersion = '4.3.1'

        kotlin_version = "1.6.10"
        mockk_version = '1.13.1'
        koin_version = '3.1.2'
        core_testing_version = '2.1.0'
        coroutines_version = '1.5.2'
        junit_version = '4.13.2'

        retrofit_version = '2.9.0'

    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath 'com.google.gms:google-services:4.3.13'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.41.0'
    id 'com.google.dagger.hilt.android' version '2.44' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }

    def isNonStable = { candidate ->
        return ['alpha', 'beta', 'rc', 'SNAPSHOT'].any { word ->
            return candidate.version.contains(word)
        }
    }

    def isBlackListed = { candidate ->
        def blacklist = [
                // ...
        ]
        return blacklist.any { word ->
            return candidate.toString().contains(word)
        }
    }

    dependencyUpdates {
        rejectVersionIf {
            isNonStable(it.candidate) || isBlackListed(it.candidate)
        }
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}